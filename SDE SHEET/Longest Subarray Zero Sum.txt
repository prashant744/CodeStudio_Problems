#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
int LongestSubsetWithZeroSum(vector < int > arr) {

  // Write your code here
    int n=arr.size();
    int max_sum=0;
    
    for(int i=0;i<n;i++){
        int sum=0;
        for(int j=i;j<n;j++){
            sum+=arr[j];
            if(sum==0){
                max_sum=max(j-i+1,max_sum);
            }
        }
    }
    return max_sum;

}


// optimal approach

#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
int LongestSubsetWithZeroSum(vector < int > arr) {

  // Write your code here
    int sum=0;
    int maxi=0;
    int n=arr.size();
    unordered_map<int,int>mp;
    
    for(int i=0;i<n;i++){
        sum+=arr[i];
        if(sum==0){
            maxi=i+1;
        }else{
            if(mp.find(sum)!=mp.end()){
                maxi=max(maxi,i-mp[sum]);
            }else{
                mp[sum]=i;
            }
        }
    }
    return maxi;

}