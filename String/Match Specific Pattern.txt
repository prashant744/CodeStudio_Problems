#include<bits/stdc++.h>
bool check(string s,string p)
{  
     if(s.size()!=p.size())
         return false;
    unordered_map<char,char>m;
    for(int i=0;i<s.size();i++)
    {
        if(m.find(p[i])==m.end())
        {
            m[p[i]]=s[i];
        }
        else
        {
            if(m[p[i]]!=s[i])
                return false;
        }
        
    }
    unordered_set<char>st;
    for(auto x:m)
    {
        if(st.find(x.second)!=st.end())
            return false;
        st.insert(x.second);
    }
        
    return true;
}
vector<string> matchSpecificPattern(vector<string> words, int n, string pattern)
{
    vector<string>v;
    for(int i=0;i<words.size();i++)
    {
        if(check(words[i],pattern))
            v.push_back(words[i]);
    }
    return v;
}